import com.artistech.algolink.orgs.scenario1.Scenario1Config;

import com.artistech.algolink.AlgoLinkInfo;
import com.artistech.algolink.core.DataBuilder;
import com.artistech.algolink.core.DataBuilderConfig;
import com.artistech.algolink.core.Organization;
import com.artistech.algolink.core.Population;
import com.artistech.algolink.core.PopulationConfig;
import com.artistech.algolink.serializers.IAlgoLinkSerializer;
import com.artistech.algolink.serializers.JsonSerializer;
import com.artistech.algolink.writers.IAlgoLinkWriter;
import com.artistech.algolink.writers.IWriterFactory;
import com.artistech.algolink.writers.JsonCommsWriter;
import com.artistech.algolink.writers.PolyMakeWriter;
import com.artistech.algolink.writers.WriterFactory;
import com.artistech.utils.logging.Logging;

import java.util.logging.Logger;
import java.util.logging.Level;

Logging.initLogging(new AlgoLinkInfo());
Logger logger = Logger.getLogger("com.artistech.algolink.bsh.sp-uni");

int duration = 1440 * 28;
int population_size = 150000;
int max_sp = 6; //inclusive
int min_sp = 1; //inclusive

for(int ii = min_sp; ii <= max_sp; ii++) {
    //not strictly necessary, but if running multiple
    //simulations in serial in the same script, this would be necessary
    com.artistech.utils.Random.reset(true);

    //initialize configs:
    DataBuilderConfig dbc = new DataBuilderConfig();
    PopulationConfig pc = new PopulationConfig();

    dbc.setDuration(duration);
    dbc.setRealTimeFactor(0);
    dbc.setName("sp-" + Integer.toString(ii));
    pc.setSize(population_size);
    Population pop = pc.createPopulation(dbc.getStartTime());

    //initialize orgs:
    for(int jj = 0; jj < ii; jj++) {
        Scenario1Config sc = new Scenario1Config();
        sc.setEvolve(false);
        sc.setDynamics(false);
        Organization o = sc.createOrganization(dbc.getStartTime());
        //create population:
        pop.addOrganization(o, dbc.getStartTime());
    }

    //create data builder:
    DataBuilder db = dbc.createDataBuilder(pop);

    //initialize serializers/writers:
    IWriterFactory factory = WriterFactory.defaultFactory();
    IAlgoLinkWriter w = factory.createInstance(PolyMakeWriter.class);
    w.initialize(db);
    w = factory.createInstance(JsonCommsWriter.class);
    w.initialize(db);
    db.initialize();

    //IAlgoLinkSerializer serializer = new JsonSerializer();
    //serializer.serialize(db, pop);

    //run and wait:
    db.builderThread().start();
    db.waitForTermination();
    System.gc();
}